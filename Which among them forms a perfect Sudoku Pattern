class Solution {
    public boolean isValidSudoku(char[][] board) {
        int map1[] = new int[10];
        int map2[] = new int[10];
        int map3[] = new int[10];
        for(int i=0; i<board.length; i++) {
            int map[] = new int[10];
            if(i==0||i==3||i==6) {
                for(int k=0; k<10; k++) {
                    map1[k] = 0;
                    map2[k] = 0;
                    map3[k] = 0;
                }
            }

            for(int j=0; j<board.length; j++) {
                if(board[i][j] == '.')
                continue;

                int num = board[i][j]-'0';
                map[num]++;

                if(j<3)
                    map1[num]++;
                else if(j<6)
                    map2[num]++;
                else
                    map3[num]++;

                if(map[num]>1||map1[num]>1||map2[num]>1||map3[num]>1)
                    return false;
            }
        }

        for(int i=0; i<board.length; i++) {
            int map[] = new int[10];
            for(int j=0; j<board.length; j++) {
                if(board[j][i] == '.')
                continue;

                int num = board[j][i]-'0';
                map[num]++;   

                if(map[num] > 1)
                return false; 
            }    
        }

        return true;        
    }
}
